// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Azure Key Vault Example renders the Example Azure KeyVault and checks snapshot 1`] = `
{
  "data": {
    "azurerm_client_config": {
      "CurrentClientConfig": {},
    },
    "azurerm_monitor_diagnostic_categories": {
      "kv_diagsettings_diagcategories_3468E7DD": {
        "resource_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
      },
    },
  },
  "output": {
    "id": {
      "value": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
    },
    "key_vault_name": {
      "value": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.name}",
    },
    "resource_group_name": {
      "value": "\${azurerm_resource_group.rg.name}",
    },
  },
  "provider": {
    "azurerm": [
      {
        "features": {},
      },
    ],
  },
  "resource": {
    "azurerm_key_vault": {
      "kv_key_vault_6CCDEEF8": {
        "location": "eastus",
        "name": "kv-\${var.name}",
        "network_acls": {
          "bypass": "AzureServices",
          "default_action": "Allow",
          "ip_rules": [
            "0.0.0.0/0",
          ],
        },
        "purge_protection_enabled": true,
        "resource_group_name": "\${azurerm_resource_group.rg.name}",
        "sku_name": "standard",
        "soft_delete_retention_days": 7,
      },
    },
    "azurerm_key_vault_access_policy": {
      "kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949": {
        "certificate_permissions": [
          "Get",
          "List",
          "Create",
          "Delete",
          "GetIssuers",
          "ManageIssuers",
        ],
        "key_permissions": [
          "Backup",
          "Create",
          "Decrypt",
          "Delete",
          "Encrypt",
          "Get",
          "Import",
          "List",
          "Purge",
          "Recover",
          "Restore",
          "Sign",
          "UnwrapKey",
          "Update",
          "Verify",
          "WrapKey",
          "Release",
          "Rotate",
          "GetRotationPolicy",
          "SetRotationPolicy",
        ],
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "object_id": "\${data.azurerm_client_config.CurrentClientConfig.object_id}",
        "secret_permissions": [
          "Get",
          "List",
          "Set",
          "Delete",
        ],
        "storage_permissions": [
          "Get",
          "List",
          "Set",
          "Delete",
        ],
      },
      "kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5": {
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "object_id": "bc26a701-6acb-4117-93e0-e44054e22d60",
        "secret_permissions": [
          "Get",
          "List",
          "Set",
          "Delete",
          "Backup",
          "Restore",
          "Recover",
        ],
      },
    },
    "azurerm_key_vault_certificate": {
      "kv_cert1_AzureKeyVaultCertificate_A017BD2B": {
        "certificate_policy": {
          "issuer_parameters": {
            "name": "Self",
          },
          "key_properties": {
            "exportable": true,
            "key_size": 2048,
            "key_type": "RSA",
            "reuse_key": true,
          },
          "lifetime_action": [
            {
              "action": {
                "action_type": "AutoRenew",
              },
              "trigger": {
                "days_before_expiry": 45,
              },
            },
          ],
          "secret_properties": {
            "content_type": "application/x-pkcs12",
          },
          "x509_certificate_properties": {
            "extended_key_usage": [
              "1.3.6.1.5.5.7.3.1",
            ],
            "key_usage": [
              "cRLSign",
              "dataEncipherment",
              "digitalSignature",
              "keyAgreement",
              "keyCertSign",
              "keyEncipherment",
            ],
            "subject": "CN=contoso.com",
            "subject_alternative_names": {
              "dns_names": [
                "internal.contoso.com",
                "domain.hello.world",
              ],
            },
            "validity_in_months": 12,
          },
        },
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "cert1",
      },
    },
    "azurerm_key_vault_certificate_issuer": {
      "kv_issuer1_AzureKeyVaultCertificate_90383EBD": {
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "issuer1",
        "provider_name": "SslAdminV2",
      },
    },
    "azurerm_key_vault_key": {
      "kv_key1_AzureKeyVaultKey_02CD8333": {
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "expiration_date": "2033-08-23T15:23:17Z",
        "key_opts": [
          "decrypt",
          "encrypt",
          "sign",
          "unwrapKey",
          "verify",
          "wrapKey",
        ],
        "key_size": 2048,
        "key_type": "RSA",
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "key1",
      },
      "kv_key2_AzureKeyVaultKey_AB98C26C": {
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "expiration_date": "2033-08-23T15:23:17Z",
        "key_opts": [
          "encrypt",
          "decrypt",
          "sign",
          "verify",
          "wrapKey",
          "unwrapKey",
        ],
        "key_size": 2048,
        "key_type": "RSA",
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "key2",
      },
    },
    "azurerm_key_vault_secret": {
      "kv_customSecretName_69DB8BBD": {
        "content_type": "application/x-pkcs12",
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "expiration_date": "2033-08-23T15:23:17Z",
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "customSecretName",
        "value": "password",
      },
      "kv_secret1_8BCF2182": {
        "content_type": "application/x-pkcs12",
        "depends_on": [
          "azurerm_key_vault_access_policy.kv_kv_secret_admin_access_bc26a701-6acb-4117-93e0-e44054e22d60_policy_BF8031B5",
          "azurerm_key_vault_access_policy.kv_kv_custom_policy_access_TfTokenTOKEN42_policy_3E859949",
        ],
        "expiration_date": "2033-08-23T15:23:17Z",
        "key_vault_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
        "name": "secret1",
        "value": "password",
      },
    },
    "azurerm_log_analytics_workspace": {
      "log_analytics": {
        "location": "eastus",
        "name": "la-\${var.name}",
        "resource_group_name": "\${azurerm_resource_group.rg.name}",
      },
    },
    "azurerm_monitor_diagnostic_setting": {
      "kv_diagsettings_CA534DF2": {
        "dynamic": {
          "enabled_log": {
            "content": {
              "category": "\${enabled_log.value}",
            },
            "for_each": "\${tolist(data.azurerm_monitor_diagnostic_categories.kv_diagsettings_diagcategories_3468E7DD.log_category_types)}",
          },
          "metric": {
            "content": {
              "category": "\${metric.value}",
            },
            "for_each": "\${tolist(data.azurerm_monitor_diagnostic_categories.kv_diagsettings_diagcategories_3468E7DD.metrics)}",
          },
        },
        "log_analytics_workspace_id": "\${azurerm_log_analytics_workspace.log_analytics.id}",
        "name": "diagsettings",
        "target_resource_id": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
      },
    },
    "azurerm_resource_group": {
      "rg": {
        "location": "eastus",
        "name": "rg-\${var.name}",
      },
    },
    "azurerm_role_assignment": {
      "kv_TfTokenTOKEN41Contributor_role_364F22CA": {
        "principal_id": "\${data.azurerm_client_config.CurrentClientConfig.object_id}",
        "role_definition_name": "Contributor",
        "scope": "\${azurerm_key_vault.kv_key_vault_6CCDEEF8.id}",
      },
    },
  },
  "terraform": {
    "required_providers": {
      "azurerm": {
        "source": "azurerm",
        "version": "3.70.0",
      },
    },
  },
  "variable": {
    "name": {
      "default": "test",
      "description": "System name used to randomize the resources",
      "type": "string",
    },
  },
}
`;

exports[`Azure Key Vault With Defaults renders an Azure Key Vault with defaults and checks snapshot 1`] = `
"{
  "output": {
    "id": {
      "value": "\${azurerm_key_vault.testAzureKeyVaultDefaults_key_vault_A0C09326.id}"
    },
    "key_vault_name": {
      "value": "\${azurerm_key_vault.testAzureKeyVaultDefaults_key_vault_A0C09326.name}"
    }
  },
  "provider": {
    "azurerm": [
      {
        "features": {
        }
      }
    ]
  },
  "resource": {
    "azurerm_key_vault": {
      "testAzureKeyVaultDefaults_key_vault_A0C09326": {
        "location": "eastus",
        "name": "kv-test",
        "purge_protection_enabled": true,
        "resource_group_name": "\${azurerm_resource_group.MyResourceGroup.name}",
        "sku_name": "standard",
        "soft_delete_retention_days": 90,
        "tenant_id": "123e4567-e89b-12d3-a456-426614174000"
      }
    },
    "azurerm_resource_group": {
      "MyResourceGroup": {
        "location": "eastus",
        "name": "rg-test"
      }
    }
  },
  "terraform": {
    "required_providers": {
      "azurerm": {
        "source": "azurerm",
        "version": "3.70.0"
      }
    }
  }
}"
`;
